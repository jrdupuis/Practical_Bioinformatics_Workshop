install.packages("snpAIMeR")
library(snpAIMeR)
setwd("/Users/kim/Dropbox/Postdoc/Project/Alud_ddRAD_vs_WGS/Alud_ddRAD/1179/29408_fam10Wil/0.7_missing")
library(adegenet)
snps <- read.structure("Alud_ddRAD_352ind_0.5-0.2miss_3minDP_0.01maf_noInDels_biAllelic_0.7maxMissing_fam10Wil.stru", n.ind=352, n.loc=29408, onerowperind=F, col.lab=1, col.pop=2, row.marknames=1, NA.char="-9", ask=FALSE, quiet=FALSE)
snps <- read.structure("Alud_ddRAD_352ind_0.5-0.2miss_3minDP_0.01maf_noInDels_biAllelic_0.7maxMissing_fam10Wil.stru", n.ind=352, n.loc=1872, onerowperind=F, col.lab=1, col.pop=2, row.marknames=1, NA.char="-9", ask=FALSE, quiet=FALSE)
snps_noNA <- as.matrix(tab(snps, NA.method="mean"))
pca1 <- dudi.pca(snps_noNA, center=TRUE, scale=FALSE)
col <- c("#E7298A", "#1B9E77", "#E6AB02", "#7570B3", "#D95F02", "#A6761D", "#66A61E")
s.class(pca1$li, pop(snps),xax=1,yax=2, axesell=FALSE, cstar=0, cpoint=2, col=transp(col,.6))
title("pca axes=2\naxes 1-2")
s.class(pca1$li, pop(snps),xax=1,yax=2, axesell=FALSE, cstar=0, cpoint=2, col=transp(col,.6))
title("pca axes=2\naxes 1-2")
add.scatter.eig(pca1$eig[1:10],nf=2,xax=1,yax=2)
grp <- find.clusters(snps)
scatter(dapc1,1,1, bg="white", scree.da=TRUE, legend=TRUE, solid=.4)
table(pop(snps), grp$grp)
dapc1 <- dapc(snps, snps$pop, n.pca=2, n.da=2)
scatter(dapc1,1,1, bg="white", scree.da=TRUE, legend=TRUE, solid=.4)
contrib <- loadingplot(dapc1$var.contr, axis=1, threshold=0.02, lab.jitter=1)
dapc_loading1 <- sort(dapc1$var.contr[,1], decreasing=T)
write.csv(dapc_loading1, "dapc_loading_axis1.txt")
quit()
setwd("/Users/kim/Dropbox/Postdoc/Project/Alud_ddRAD_vs_WGS/Alud_WGS/157456_wildReared/marker_selection/snpAIMeR/panel_size_1-20/panel_size_15")
data <- read.csv("Above_threshold_assign_rate.csv")
header(data)
colnames(data)
head(data,5)
str(data)
quit()
install.packages("palmerpenguins")
library(palmerpenguins)
?penguins_raw
penguins %>%
select(species, island, body_mass_g, sex) %>% # step 1
filter(species == "Adelie" & island == "Dream") %>% # step 2
group_by(sex) %>% # step 3
summarise(mean_body_mass = mean(body_mass_g)) %>% # step 4
drop_na() # step 5
install.packages("tidyverse")
penguins %>%
+     select(species, island, body_mass_g, sex) %>% # step 1
+     filter(species == "Adelie" & island == "Dream") %>% # step 2
+     group_by(sex) %>% # step 3
+     summarise(mean_body_mass = mean(body_mass_g)) %>% # step 4
+     drop_na() # step 5
library(tidyr)
library(tidyverse)
penguins %>%
+     select(species, island, body_mass_g, sex) %>% # step 1
+     filter(species == "Adelie" & island == "Dream") %>% # step 2
+     group_by(sex) %>% # step 3
+     summarise(mean_body_mass = mean(body_mass_g)) %>% # step 4
+     drop_na() # step 5
penguins
penguins %>% select(species, island, body_mass_g, sex)
eagle_nest_data <- data.frame(
"region" = c("Pacific", "Southwest", "Rockies"),
"2007" = c(1039, 51, 200),
"2009" = c(2587, 176, 338),
check.names=FALSE
)
print(eagle_nest_data)
eagle_nest_data %>%           # %>% (magrittr) is a pipe (forwards a value into an expression or function).
pivot_longer(
cols = c(`2007`, `2009`), # Reorganize so that 2007 and 2009 are in a single column.
names_to = "year",        # Rename that column "year".
values_to = "num_nests"   # 2007 and 2009 nest values are in a new "num_nests" column.
)
install.packages("qqman")
library(qqman)
vignette('qqman')
quit()
library("karyoploteR")
custom.genome <- toGRanges(data.frame(chr=c("Chromosome1", "ptg000009l", "ptg000006l","Chromosome4", "Chromosome5", "Chromosome6", "Chromosome7", "Chromosome8"), start=c(0, 0, 0, 0, 0, 0, 0, 0), end=c(185090896, 133334114, 131385308, 127816055, 128169929, 101006030, 125626, 6859227)))
kp <- plotKaryotype(genome = custom.genome)
kp <- kpPlotDensity(kp, tmp.vcf.data)
tmp.vcf<-readLines("/Users/kim/Dropbox/Postdoc/Project/Alud_ddRAD_vs_WGS/Alud_WGS/Alud_WGS_180ind_0.2miss_3minDP_0.01maf_noInDels_biAllelic_157456snps.vcf")
tmp.vcf.data<-read.table("/Users/kim/Dropbox/Postdoc/Project/Alud_ddRAD_vs_WGS/Alud_WGS/Alud_WGS_180ind_0.2miss_3minDP_0.01maf_noInDels_biAllelic_157456snps.vcf")
tmp.vcf.data %>% drop_na()
#tmp.vcf.data %>% drop_na()
tmp.vcf<-tmp.vcf[-(grep("#CHROM",tmp.vcf)+1):-(length(tmp.vcf))]
vcf.names<-unlist(strsplit(tmp.vcf[length(tmp.vcf)],"\t"))
names(tmp.vcf.data)<-vcf.names
colnames(tmp.vcf.data)[1] <- "Chr"
colnames(tmp.vcf.data)[2] <- "Start"
tmp.vcf.data = cbind(tmp.vcf.data,End=rep(tmp.vcf.data$Start+1))
tmp.vcf.data <- tmp.vcf.data[, c(1,2,ncol(tmp.vcf.data), 3:(ncol(tmp.vcf.data)-1))]
toGRanges(tmp.vcf.data)
kp <- kpPlotDensity(kp, tmp.vcf.data)
tmp.vcf.data.GRanges <- toGRanges(tmp.vcf.data)
kp <- kpPlotDensity(kp, tmp.vcf.data.GRanges)
kp <- plotKaryotype(genome = custom.genome)
kp <- kpPlotDensity(kp, tmp.vcf.data.GRanges)
kp <- plotKaryotype(genome = "custom.genome")
library(BSgenome.Alud.aludPScaff.al0)
#kp <- plotKaryotype(genome = custom.genome)
kp <- plotKaryotype(genome = BSgenome.Alud.aludPScaff.al0")
#kp <- plotKaryotype(genome = custom.genome)
kp <- plotKaryotype(genome = "BSgenome.Alud.aludPScaff.al0")
#kp <- plotKaryotype(genome = custom.genome)
kp <- plotKaryotype(genome = "BSgenome.Alud.aludPScaff.al0")
kp <- plotKaryotype(genome = custom.genome)
kp <- plotKaryotype(genome = custom.genome, chromosomes="all")
kp <- kpPlotDensity(kp, tmp.vcf.data.GRanges)
kp <- plotKaryotype(genome = custom.genome, chromosomes="all")
kp2 <- kpPlotDensity(kp, tmp.vcf.data.GRanges)
kp <- plotKaryotype(genome = custom.genome, chromosomes="all")
kp
library("karyoploteR")
kp <- plotKaryotype(genome = custom.genome, chromosomes="all")
kp2 <- kpPlotDensity(kp, tmp.vcf.data.GRanges)
markerdata <- read.csv("/Users/kim/Dropbox/Postdoc/Project/Alud_ddRAD_vs_WGS/manuscript/Fig_snp_locations/wildRearing_markers_ddRAD_WGS_Alud_p_scaff.txt", header = TRUE, sep = ",")
kp3 <- kpPlotDensity(kp2, chr=markerdata$chromosome, x=markerdata$start, labels=markerdata$marker)
kp3 <- kpPlotMarkers(kp2, chr=markerdata$chromosome, x=markerdata$start, labels=markerdata$marker)
kp <- plotKaryotype(genome = custom.genome, chromosomes="all")
kp2 <- kpPlotDensity(kp, tmp.vcf.data.GRanges)
library("karyoploteR")
kp <- plotKaryotype(genome = custom.genome, chromosomes="all")
kp2 <- kpPlotDensity(kp, tmp.vcf.data.GRanges)
kp
custom.genome <- toGRanges(data.frame(chr=c("Chromosome1", "ptg000009l", "ptg000006l","Chromosome4", "Chromosome5", "Chromosome6", "Chromosome7", "Chromosome8"), start=c(0, 0, 0, 0, 0, 0, 0, 0), end=c(185090896, 133334114, 131385308, 127816055, 128169929, 101006030, 125626, 6859227)))
kp <- plotKaryotype(genome = custom.genome, chromosomes="all")
kp2 <- kpPlotDensity(kp, tmp.vcf.data.GRanges)
kp
kpPlotDensity(kp, tmp.vcf.data.GRanges)
library(karyoploteR)
kp <- plotKaryotype(genome = custom.genome, chromosomes="all")
kpPlotDensity(kp, tmp.vcf.data.GRanges)
kp <- plotKaryotype(genome = custom.genome, chromosomes="all")
kp
kpPlotDensity(kp, tmp.vcf.data.GRanges)
kp <- plotKaryotype(genome = custom.genome, chromosomes="all")
kpPlotDensity(kp, tmp.vcf.data.GRanges)
kpPlotMarkers(kp, chr=markerdata$chromosome, x=markerdata$start, labels=markerdata$marker)
kp <- plotKaryotype(genome = custom.genome, chromosomes="all")
kp2 <- kpPlotDensity(kp, tmp.vcf.data.GRanges)
kp3 <- kpPlotMarkers(kp2, chr=markerdata$chromosome, x=markerdata$start, labels=markerdata$marker)
kp3
kp <- plotKaryotype(genome = custom.genome, chromosomes="all")
kpPlotDensity(kp, tmp.vcf.data.GRanges)
kpPlotMarkers(kp, chr=markerdata$chromosome, x=markerdata$start, labels=markerdata$marker)
kp <- plotKaryotype(genome = custom.genome, chromosomes="all")
kpPlotDensity(kp, tmp.vcf.data.GRanges)
kpPlotMarkers(kp, chr=markerdata$chromosome, x=markerdata$start, labels=markerdata$marker)
kp <- plotKaryotype(genome = custom.genome, chromosomes="all")
kpPlotDensity(kp, tmp.vcf.data.GRanges)
kpPlotMarkers(kp, chr=markerdata$chromosome, x=markerdata$start)
kp <- plotKaryotype(genome = custom.genome, chromosomes="all")
kpPlotDensity(kp, tmp.vcf.data.GRanges)
kpPlotMarkers(kp, chr=markerdata$chromosome, x=markerdata$start, labels=none)
kp <- plotKaryotype(genome = custom.genome, chromosomes="all")
kpPlotDensity(kp, tmp.vcf.data.GRanges)
kpPlotMarkers(kp, chr=markerdata$chromosome, x=markerdata$start, labels=markerdata$marker)
View(kp)
library(adegenet)
data(nancycats)
nancycats[10:18, loc="fca8"]@tab
library(hierfstat)
library(pegas)
plot(Fst(as.loci(nancycats))[,2], wc(nancycats)$per.loc$FST)
setwd("/Users/kim/Dropbox/Postdoc/Project/Teaching/Practical_Bioinformatics_Workshop/data")
swallowtail_data <- read.structure("swallowtail_ABBC_781ind_10microsat.str", n.ind=781, n.loc=10, onerowperind=T,  row.marknames=NULL, col.lab=1, col.pop=2, NA.char="-9", ask=F)
library(adegenet)
swallowtail_data <- read.structure("swallowtail_ABBC_781ind_10microsat.str", n.ind=781, n.loc=10, onerowperind=T,  row.marknames=NULL, col.lab=1, col.pop=2, NA.char="-9", ask=F)
swallowtail_strata <-read.table("swallowtail_ABBC_strata.txt", header=T)
strata(swallowtail_data) <- swallowtail_strata
swallowtail_data@strata
library(hierfstat)
setPop(swallowtail_data) <- ~ pop
genD <- genet.dist(swallowtail_data, method = "Fst")
latlong <- swallowtail_strata[c('lat','long')]
latlong_unique <- unique(latlong)
library(geosphere)
library(sna)
geoD_temp1 <- distm(latlong_unique[c('lat','long')],fun=distVincentyEllipsoid)
geoD_temp1 <- distm(latlong_unique[c('long','lat')],fun=distVincentyEllipsoid)
swallowtail_strata <-read.table("swallowtail_ABBC_strata.txt", header=T)
strata(swallowtail_data) <- swallowtail_strata
setPop(swallowtail_data) <- ~ pop
genD <- genet.dist(swallowtail_data, method = "Fst")
latlong <- swallowtail_strata[c('lat','long')]
latlong_unique <- unique(latlong)
geoD_temp1 <- distm(latlong_unique[c('lat','long')],fun=distVincentyEllipsoid)
geoD_temp1 <- distm(latlong_unique[c('long','lat')],fun=distVincentyEllipsoid)
geoD_temp2 <- geoD_temp1/1000
geoD <- as.dist(upper.tri.remove(geoD_temp2, remove.val=NA))
ibd <- mantel.randtest(genD,geoD, nrepet=10000)
ibd
plot(geoD,genD)
dist_lm <- lm(as.vector(genD) ~ as.vector(geoD))
abline(dist_lm, col="red", lty=2)
latlong <- swallowtail_strata[c('long','lat')]
latlong_unique <- unique(latlong)
geoD_temp1 <- distm(latlong_unique[c('long','lat')],fun=distVincentyEllipsoid)
geoD_temp2 <- geoD_temp1/1000
geoD <- as.dist(upper.tri.remove(geoD_temp2, remove.val=NA))
plot(geoD,genD)
